@model Moccacito.Models.NewProductForClientViewModel

@{
    ViewBag.Title = "Nowy produkt";
}

<h2>Nowy produkt</h2>
<h3>@Model.ClientName</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ClientId)
    
    <div class="form-horizontal">
        <h4>Produkty</h4>
        <hr />
        <div class="btn-group">
            @Html.ActionLink("Powrót", "Index", null, new { @class = "btn btn-default" })
        </div>
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName)
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>

@*        <div class="form-group">
            @Html.LabelFor(model => model.Picture, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture)
                @Html.ValidationMessageFor(model => model.Picture)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
